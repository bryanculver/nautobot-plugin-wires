[tool.poetry]
name = "nautobot_plugin_wires"
version = "1.0.0"
description = "Nautobot Plugin to add a 'Wires' tab to device detail page"
authors = ["Josef Fuchs", "josef.fuchs@j-fuchs.at"]

license = "Apache-2.0"

readme = "README.md"
homepage = "https://github.com/jifox/nautobot-plugin-wires"
repository = "https://github.com/jifox/nautobot-plugin-wires"
documentation = "https://github.com/jifox/nautobot-plugin-wires"
keywords = ["nautobot", "nautobot-plugin"]
include = [
    "LICENSE",
    "README.md",
]
# https://pypi.org/classifiers/
classifiers = [
    "Intended Audience :: Developers",
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
packages = [
    { include = "nautobot_plugin_wires" },
]

[tool.poetry.dependencies]
python = "^3.8"
deepdiff = "^5.5.0"
## Setting as next to test with DynamicGroup changes
nautobot = ">=1.5.2"

[tool.poetry.dev-dependencies]
bandit = "*"
black = "*"
django-debug-toolbar = "*"
# we need to pin flake8 because of package dependencies that cause it to downgrade and
# therefore cause issues with linting since older versions do not take .flake8 as config
flake8 = "^3.9.2"
invoke = "*"
pydocstyle = "*"
pylint = "*"
pylint-django = "*"
yamllint = "*"
Markdown = "*"
# documentation dependencies
mkdocs = "1.3.1"
mkdocs-material = "8.3.9"
mkdocstrings = "0.19"
mkdocstrings-python = "0.7.1"

[tool.black]
line-length = 120
target-version = ['py37']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | settings.py     # This is where you define files that should not be stylized by black
                     # the root of the project
)
'''

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pylint.master]
# Include the pylint_django plugin to avoid spurious warnings about Django patterns
load-plugins="pylint_django"
ignore=["jinja_filters.py", ".venv"]
# Don't raise alarms if args/kwargs has an issue, as may be required, just as a decorator
ignored-argument-names="args|kwargs"

[tool.pylint.basic]
# No docstrings required for private methods (Pylint default), or for test_ functions, or for inner Meta classes.
no-docstring-rgx="^(_|test_|Meta$)"

[tool.pylint.messages_control]
# Line length is enforced by Black, so pylint doesn't need to check it.
# Pylint and Black disagree about how to format multi-line arrays; Black wins.
disable = """,
    line-too-long,
    too-few-public-methods,
    duplicate-code,
    """

[tool.pytest.ini_options]
testpaths = [
    "tests"
]
addopts = "-vv --doctest-modules"